@page "/sellorderitems/"
@inject HttpClient _client
@inject IJSRuntime js
@attribute [Authorize]
@inject NavigationManager _navManager
@inject HttpInterceptorService _interceptor
@implements IDisposable

<h3 class="card-title">SellOrderItem</h3>
<br />

<a href="/sellorderitems/create" class="btn btn-secondary">
    <span class="oi oi-plus"></span>
    Create New SellOrderItem
</a>
<br />
<br />

@if (SellOrderItems == null)
{
    <div class="alert alert-info">Loading SellOrderItems...</div>
}
else
{
    <table class="table table-responsive">
        <thead>
            <tr>
                <th>Quantity</th>
                <th>SellOrderId</th>
                <th>ProductId</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var SellOrderItem in SellOrderItems)
            {
                <tr>
                    <td>@SellOrderItem.Id</td>
                    <td>
                        <a href="/sellorderitems/view/@SellOrderItem.Id" class="btn btn-primary">
                            <span class="oi oi-book"></span>
                        </a>
                        <a href="/sellorderitems/edit/@SellOrderItem.Id" class="btn btn-warning">
                            <span class="oi oi-pencil"></span>
                        </a>
                        <button class="btn btn-danger" @onclick="@(()=>Delete(SellOrderItem.Id))">
                            <span class="oi oi-delete"></span>
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<SellOrderItem> SellOrderItems;

    protected async override Task OnInitializedAsync()
    {
        _interceptor.MonitorEvent();
        SellOrderItems = await _client.GetFromJsonAsync<List<SellOrderItem>>($"{Endpoints.SellOrderItemsEndpoint}");
    }

    async Task Delete(int SellOrderItemId)
    {
        var SellOrderItem = SellOrderItems.First(q => q.Id == SellOrderItemId);
        var confirm = await js.InvokeAsync<bool>("confirm", $"Do you want to delete {SellOrderItem.Id}?");
        if (confirm)
        {
            await _client.DeleteAsync($"{Endpoints.SellOrderItemsEndpoint}/{SellOrderItemId}");
            await OnInitializedAsync();
        }
    }
    public void Dispose()
    {
        _interceptor.DisposeEvent();
    }
}
